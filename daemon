<?php

require __DIR__ . '/autoload.php';

use App\Daemon;
use App\Backup;
use App\Crontab;
use eru123\venv\VirtualEnv;

$path = venv('config.path');
if (!$path) {
    throw new Exception('Config path not found');
}

$h = fopen(venv('config.log_path'), 'w');
fclose($h);

Daemon::precallback(function () use ($path) {
    clearstatcache(true, $path);
    $last_modified = filemtime($path);
    $date = DateTime::createFromFormat('U', time())->format('Y-m-d H:i:s');
    if (venv('config.last_modified') === $last_modified) {
        return;
    }

    if (venv('config.last_modified') === null) {
        echo "[$date] Initialized" . PHP_EOL;
    } else {
        echo "[$date] Config changes detected. Reloading..." . PHP_EOL;
    }

    Daemon::clear();
    $h = fopen($path, 'r');
    $buffer = '';
    while (!feof($h))
        $buffer .= fread($h, 8192);
    fclose($h);
    $data = json_decode($buffer, true);
    unset($buffer);
    venv_set('config.data', is_array($data) ? $data : []);
    unset($data);
    venv_set('config.last_modified', $last_modified);

    $backups = venv('config.data.backups', []);
    $providers = venv('config.data.providers', []);


    if (!is_array($backups)) {
        $backups = [];
    }

    if (!is_array($providers)) {
        $providers = [];
    }

    foreach ($backups as $k => $v) {
        $callback = Backup::createCallback($k);
        Daemon::create($callback);
    }
});

Daemon::run();